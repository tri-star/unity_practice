name: Test, Build, and Release ActionSample

on:
  release: 
    types: [published]

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    env:
      UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
      UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
      UNITY_SERIAL: ${{ secrets.UNITY_SERIAL }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Cache Library
        uses: actions/cache@v2
        with:
          path: Library
          key: Library
      - name: Run EditMode and PlayMode Tests
        uses: game-ci/unity-test-runner@main
      - name: Upload Test Results
        uses: actions/upload-artifact@v2
        with:
          name: test-results
          path: artifacts

  buildAndroidDev:
    name: Build for Android(Dev)
    runs-on: ubuntu-latest
    # needs: test
    env:
      UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
      UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
      UNITY_SERIAL: ${{ secrets.UNITY_SERIAL }}
    steps:
      - name: Run info
        run: |
          echo "GITHUB_RUN_NUMBER: ${GITHUB_RUN_NUMBER}"
          echo "GITHUB_RUN_ID: ${GITHUB_RUN_ID}"
          echo "GITHUB_ACTION: ${GITHUB_ACTION}"

      - name: Checkout Repository
        uses: actions/checkout@v2
        with:
          lfs: true
      - name: Cache Library
        uses: actions/cache@v2
        with:
          path: Library
          key: Library-Android
          restore-keys: Library-
      - name: Free Disk Space for Android
        run: |
          sudo swapoff -a
          sudo rm -f /swapfile
          sudo apt clean
          docker rmi $(docker image ls -aq)
          df -h
      - name: Restore google-services.json
        run: |
          echo "${GOOGLE_SERVICES_JSON}" | base64 -d > Assets/google-services.json
        env:
          GOOGLE_SERVICES_JSON: ${{ secrets.GOOGLE_SERVICES_JSON }}
      - name: Build Unity Project
        uses: game-ci/unity-builder@main
        with:
          targetPlatform: Android
          buildsPath: builds         
          androidAppBundle: false
          androidVersionCode: ${{github.run_number}}
          # androidKeystoreName: urbantheory.keystore
          # androidKeystoreBase64: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}
          # androidKeystorePass: ${{ secrets.ANDROID_KEYSTORE_PASS }}
          # androidKeyaliasName: ${{ secrets.ANDROID_KEYALIAS_NAME }}
          # androidKeyaliasPass: ${{ secrets.ANDROID_KEYALIAS_PASS }}
      - name: List BuildDir
        run: |
          ls -l builds/Android

      - uses: actions/setup-node@v1
        with:
          node-version: '10.x'

      - name: install firebase-tools
        run: npm install -g firebase-tools

      - uses: actions/setup-ruby@v1
        with:
          ruby-version: '2.6'

      - name: Install fastlane and plugins
        run: |
          cd deploy
          ruby -v
          gem env
          gem install bundler -v 2.2.4
          bundle install

      - name: Adhoc distribution
        env:
          SLACK_URL: ${{ secrets.SLACK_URL }}
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
          FIREBASE_APP_ID_ANDROID: ${{ secrets.FIREBASE_APP_ID_ANDROID }}
          APK_PATH: "../builds/Android/Android.apk"
        run: |
          cd deploy
          bundle exec fastlane adhoc --verbose


  # buildWindowsDev:
  #   name: Build for Windows(Dev)
  #   runs-on: ubuntu-latest
  #   # needs: test
  #   env:
  #     UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
  #     UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
  #     UNITY_SERIAL: ${{ secrets.UNITY_SERIAL }}
  #   steps:
  #     - name: Checkout Repository
  #       uses: actions/checkout@v2
  #       with:
  #         lfs: true
  #     - name: Cache Library
  #       uses: actions/cache@v2
  #       with:
  #         path: Library
  #         key: Library-StandaloneWindows
  #         restore-keys: Library-
  #     - name: Restore google-services.json
  #       run: |
  #         echo "${GOOGLE_SERVICES_JSON}" | base64 -d > Assets/google-services.json
  #       env:
  #         GOOGLE_SERVICES_JSON: ${{ secrets.GOOGLE_SERVICES_JSON }}
  #     - name: Build Unity Project
  #       uses: game-ci/unity-builder@main
  #       with:
  #         targetPlatform: StandaloneWindows
  #         buildsPath: builds         
  #     - name: List BuildDir
  #       run: |
  #         ls -l builds/StandaloneWindows
  #     - uses: actions/upload-artifact@v2
  #       with:
  #         name: Upload artifact
  #         path: builds/StandaloneWindows/

  buildiOSDev:
    name: Build for iOS(Dev)
    runs-on: ubuntu-latest
    # needs: test
    env:
      UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
      UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
      UNITY_SERIAL: ${{ secrets.UNITY_SERIAL }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
        with:
          lfs: true
      - name: Cache Library
        uses: actions/cache@v2
        with:
          path: Library
          key: Library-iOS
          restore-keys: Library-
      - name: Build Unity Project
        uses: game-ci/unity-builder@main
        with:
          targetPlatform: iOS
          buildsPath: builds
      - name: List BuildDir
        run: ls -l builds/iOS/iOS
      - name: Upload Build
        uses: actions/upload-artifact@v2
        with:
          name: build-result-ios
          path: builds/iOS

  iOSAdhoc:
    name: iOS Adhoc
    runs-on: macos-latest
    needs: buildiOSDev
    env:
      UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
      UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
      UNITY_SERIAL: ${{ secrets.UNITY_SERIAL }}
    steps:
      - name: install tree
        run: brew install tree
      - name: Checkout Repository
        uses: actions/checkout@v2
        with:
          lfs: true
      - name: Restore GoogleService-info.plist
        run: |
          echo "${GOOGLE_SERVICE_INFO_PLIST}" | base64 -d > Assets/GoogleService-Info.plist
        env:
          GOOGLE_SERVICE_INFO_PLIST: ${{ secrets.GOOGLE_SERVICE_INFO_PLIST }}
      - name: Download iOS Artifact
        uses: actions/download-artifact@v2
        with:
          name: build-result-ios
          path: builds/iOS
      - name: Fix File Permissions
        run: |
          find builds/iOS -type f -name "**.sh" -exec chmod +x {} \;

      - uses: actions/setup-node@v1
        with:
          node-version: '10.x'
      - name: install firebase-tools
        run: npm install -g firebase-tools
      - uses: actions/setup-ruby@v1
        with:
          ruby-version: '2.6'

      - name: Install fastlane and plugins
        run: |
          cd deploy
          ruby -v
          gem env
          gem install bundler -v 2.2.4
          bundle install

      - name: Adhoc
        env:
          KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
          SLACK_URL: ${{ secrets.SLACK_URL }}
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
          FIREBASE_APP_ID_IOS: ${{ secrets.FIREBASE_APP_ID_IOS }}
          FASTLANE_USERNAME: ${{ secrets.FASTLANE_USERNAME }}
          FASTLANE_SESSION: ${{ secrets.FASTLANE_SESSION }}
          MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
          MATCH_GIT_URL: ${{ secrets.MATCH_GIT_URL }}
          MATCH_GIT_BASIC_AUTHORIZATION: ${{ secrets.MATCH_GIT_BASIC_AUTHORIZATION }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CODE_SIGNING_IDENTITY: ${{ secrets.CODE_SIGNING_IDENTITY }}
          APPLE_APP_ID: "com.UrbanTheory.action-sample"
          APPLE_TEAM_ID: "F946L3T4HH"
        run: |
          cd deploy
          bundle exec fastlane ios adhoc --verbose

      - name: List Source Dir
        run: |
          ls -lR .

      - name: List Source Dir as tree
        run: |
          tree -ugp .
